// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.shekhar.roo.feedback.domain;

import com.shekhar.roo.feedback.domain.Feedback;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect FeedbackDataOnDemand_Roo_DataOnDemand {
    
    declare @type: FeedbackDataOnDemand: @Component;
    
    private Random FeedbackDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Feedback> FeedbackDataOnDemand.data;
    
    public Feedback FeedbackDataOnDemand.getNewTransientFeedback(int index) {
        com.shekhar.roo.feedback.domain.Feedback obj = new com.shekhar.roo.feedback.domain.Feedback();
        java.lang.String email = "email_" + index;
        if (email.length() > 45) {
            email  = email.substring(0, 45);
        }
        obj.setEmail(email);
        obj.setFeedback("feedback_" + index);
        java.lang.String fullname = "fullname_" + index;
        if (fullname.length() > 45) {
            fullname  = fullname.substring(0, 45);
        }
        obj.setFullname(fullname);
        java.lang.String sessionname = "sessionname_" + index;
        if (sessionname.length() > 45) {
            sessionname  = sessionname.substring(0, 45);
        }
        obj.setSessionname(sessionname);
        java.lang.String speaker = "speaker_" + index;
        if (speaker.length() > 45) {
            speaker  = speaker.substring(0, 45);
        }
        obj.setSpeaker(speaker);
        return obj;
    }
    
    public Feedback FeedbackDataOnDemand.getSpecificFeedback(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Feedback obj = data.get(index);
        return Feedback.findFeedback(obj.getId());
    }
    
    public Feedback FeedbackDataOnDemand.getRandomFeedback() {
        init();
        Feedback obj = data.get(rnd.nextInt(data.size()));
        return Feedback.findFeedback(obj.getId());
    }
    
    public boolean FeedbackDataOnDemand.modifyFeedback(Feedback obj) {
        return false;
    }
    
    public void FeedbackDataOnDemand.init() {
        data = com.shekhar.roo.feedback.domain.Feedback.findFeedbackEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Feedback' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.shekhar.roo.feedback.domain.Feedback>();
        for (int i = 0; i < 10; i++) {
            com.shekhar.roo.feedback.domain.Feedback obj = getNewTransientFeedback(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
